---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

vars:
  VM_CONFIG_FILE: "{{.KUBERNETES_DIR}}/{{.CLUSTER}}/provision/vmconfig.secret.sops.yaml"
  TALOSCTL_CONFIG_FILE: "{{.KUBERNETES_DIR}}/{{.CLUSTER}}/talosconfig"
  TALOS_SCHEMATIC_ID:
    sh: sops -d {{.VM_CONFIG_FILE}} | yq e '.talos.schematic-id'
  TALOS_VIP:
    sh: sops -d {{.VM_CONFIG_FILE}} | yq e '.talos.vip'
  TALOS_CONTROLPLANE_NODES:
    sh: sops -d {{.VM_CONFIG_FILE}} | yq e '.talos.controlplane-nodes'
  TALOS_WORKER_NODES:
    sh: sops -d {{.VM_CONFIG_FILE}} | yq e '.talos.worker-nodes'
  TALOS_NODE:
    sh: sops -d {{.VM_CONFIG_FILE}} | yq e '.talos.node'

tasks:

  all:
    desc: Run all tasks
    cmds:
      - {task: install-talosctl}
      - {task: gen-secrets}
      - {task: gen-machine-config}
      - {task: setup-talosctl}
      - {task: apply-machine-config}

  install-talosctl:
    desc: Install talosctl
    vars:
      cmds:
        - brew install siderolabs/tap/talosctl
        - talosctl version

  gen-secrets:
    desc: Generate secrets for the cluster
    cmds:
      - talosctl gen secrets --force -o {{.KUBERNETES_DIR}}/{{.CLUSTER}}/provision/rendered/secrets.yaml

  gen-machine-config:
    desc: Generate configuration for the cluster and export talosconfig
    cmds:
      - talosctl gen config --force {{.CLUSTER}} https://{{.TALOS_VIP}}:6443 --with-secrets {{.KUBERNETES_DIR}}/{{.CLUSTER}}/provision/rendered/secrets.yaml  --install-image factory.talos.dev/installer/{{.TALOS_SCHEMATIC_ID}}:{{.TALOS_VERSION}} --config-patch @{{.KUBERNETES_DIR}}/{{.CLUSTER}}/provision/patches/cni.yaml --config-patch @{{.KUBERNETES_DIR}}/{{.CLUSTER}}/provision/patches/dhcp.yaml --config-patch @{{.KUBERNETES_DIR}}/{{.CLUSTER}}/provision/patches/install-disk.yaml --config-patch @{{.KUBERNETES_DIR}}/{{.CLUSTER}}/provision/patches/interface-names.yaml --config-patch-control-plane '[{"op":"add","path":"/machine/network/interfaces/0/vip","value":{"ip":"{{.TALOS_VIP}}"}}]' --config-patch-worker @{{.KUBERNETES_DIR}}/{{.CLUSTER}}/provision/patches/longhorn.yaml --output {{.KUBERNETES_DIR}}/{{.CLUSTER}}/provision/rendered

  setup-talosctl:
    desc: Setup talosctl - Note dont use VIP, see https://www.talos.dev/v1.7/talos-guides/network/vip/#caveats
    cmds:
      - cp {{.KUBERNETES_DIR}}/{{.CLUSTER}}/provision/rendered/talosconfig {{.TALOSCTL_CONFIG_FILE}}
      - talosctl --talosconfig {{.TALOSCTL_CONFIG_FILE}} config node {{.TALOS_NODE}}
      - talosctl --talosconfig {{.TALOSCTL_CONFIG_FILE}} config endpoint {{.TALOS_CONTROLPLANE_NODES}}

  apply-machine-config:
    desc: Apply configuration to the cluster i.e. install Talos
    cmds:
      - for: {var: TALOS_CONTROLPLANE_NODES}
        cmd: talosctl --talosconfig {{.TALOSCTL_CONFIG_FILE}} apply-config --insecure --nodes {{.ITEM}} --file {{.KUBERNETES_DIR}}/{{.CLUSTER}}/provision/rendered/controlplane.yaml
      - for: {var: TALOS_WORKER_NODES}
        cmd: talosctl --talosconfig {{.TALOSCTL_CONFIG_FILE}} apply-config --insecure --nodes {{.ITEM}} --file {{.KUBERNETES_DIR}}/{{.CLUSTER}}/provision/rendered/worker.yaml

  reset-cluster:
    desc: Reset all the Talos nodes and shut 'em down
    prompt: Reset Talos on the '{{.cluster}}' cluster ... continue?
    cmd: talosctl --talosconfig {{.TALOSCTL_CONFIG_FILE}} reset --nodes {{.nodes}} --graceful=false
    vars:
      nodes:
        sh: kubectl get nodes -o json | jq -r '[.items[].status.addresses[] | select(.type == "InternalIP") | .address] | join(",")'
